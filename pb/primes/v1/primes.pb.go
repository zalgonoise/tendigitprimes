// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: primes/v1/primes.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RandomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min int64 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *RandomRequest) Reset() {
	*x = RandomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_primes_v1_primes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomRequest) ProtoMessage() {}

func (x *RandomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_primes_v1_primes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomRequest.ProtoReflect.Descriptor instead.
func (*RandomRequest) Descriptor() ([]byte, []int) {
	return file_primes_v1_primes_proto_rawDescGZIP(), []int{0}
}

func (x *RandomRequest) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *RandomRequest) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type RandomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prime int64 `protobuf:"varint,1,opt,name=prime,json=prime_number,proto3" json:"prime,omitempty"`
}

func (x *RandomResponse) Reset() {
	*x = RandomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_primes_v1_primes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomResponse) ProtoMessage() {}

func (x *RandomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_primes_v1_primes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomResponse.ProtoReflect.Descriptor instead.
func (*RandomResponse) Descriptor() ([]byte, []int) {
	return file_primes_v1_primes_proto_rawDescGZIP(), []int{1}
}

func (x *RandomResponse) GetPrime() int64 {
	if x != nil {
		return x.Prime
	}
	return 0
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min        int64 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max        int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	MaxResults int64 `protobuf:"varint,3,opt,name=max_results,proto3" json:"max_results,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_primes_v1_primes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_primes_v1_primes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_primes_v1_primes_proto_rawDescGZIP(), []int{2}
}

func (x *ListRequest) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *ListRequest) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *ListRequest) GetMaxResults() int64 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primes []int64 `protobuf:"varint,1,rep,packed,name=primes,json=prime_numbers,proto3" json:"primes,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_primes_v1_primes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_primes_v1_primes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_primes_v1_primes_proto_rawDescGZIP(), []int{3}
}

func (x *ListResponse) GetPrimes() []int64 {
	if x != nil {
		return x.Primes
	}
	return nil
}

var File_primes_v1_primes_proto protoreflect.FileDescriptor

var file_primes_v1_primes_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x02, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x22, 0x06, 0x18, 0xff, 0xc7, 0xaf, 0xa0, 0x25, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x22, 0x2d, 0x0a, 0x0e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x75, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x03,
	0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x22, 0x06,
	0x18, 0xff, 0xc7, 0xaf, 0xa0, 0x25, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x2c, 0x0a, 0x0b, 0x6d,
	0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x22, 0x05, 0x18, 0x88, 0x27, 0x28, 0x00, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x32, 0xce, 0x03, 0x0a, 0x06, 0x50, 0x72, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0xe5, 0x01, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x69, 0x6d, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x92, 0x41, 0x8a, 0x01, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x37, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x20, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x73, 0x20, 0x69, 0x6e, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x47, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x73, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x20, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2c, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 0x20,
	0x31, 0x30, 0x20, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x72, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x72, 0x61, 0x6e, 0x64, 0x12, 0xdb, 0x01, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70,
	0x72, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x01, 0x92, 0x41, 0x8b, 0x01, 0x0a, 0x06, 0x50, 0x72,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x20,
	0x73, 0x65, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x47,
	0x54, 0x68, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x20, 0x70,
	0x72, 0x69, 0x6d, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2c, 0x20, 0x75, 0x70, 0x20,
	0x74, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x73, 0x42, 0xcc, 0x02, 0x92, 0x41, 0x9c, 0x02,
	0x0a, 0x03, 0x32, 0x2e, 0x30, 0x12, 0x46, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x37, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x20,
	0x70, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x20, 0x75, 0x70,
	0x20, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x20, 0x69, 0x6e,
	0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2e, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x01, 0x01,
	0x52, 0x35, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x2e, 0x0a, 0x0f, 0x55, 0x6e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x19, 0x1a, 0x17,
	0x23, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x70,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x32, 0x0a, 0x03, 0x34, 0x30, 0x33, 0x12, 0x2b,
	0x0a, 0x0c, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x19, 0x1a, 0x17, 0x23, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x72, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x6a, 0x4f, 0x0a, 0x06, 0x50,
	0x72, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x45, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x77,
	0x68, 0x69, 0x63, 0x68, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x73, 0x20, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5a, 0x2a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x61, 0x6c, 0x67, 0x6f, 0x6e, 0x6f,
	0x69, 0x73, 0x65, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x73, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_primes_v1_primes_proto_rawDescOnce sync.Once
	file_primes_v1_primes_proto_rawDescData = file_primes_v1_primes_proto_rawDesc
)

func file_primes_v1_primes_proto_rawDescGZIP() []byte {
	file_primes_v1_primes_proto_rawDescOnce.Do(func() {
		file_primes_v1_primes_proto_rawDescData = protoimpl.X.CompressGZIP(file_primes_v1_primes_proto_rawDescData)
	})
	return file_primes_v1_primes_proto_rawDescData
}

var file_primes_v1_primes_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_primes_v1_primes_proto_goTypes = []interface{}{
	(*RandomRequest)(nil),  // 0: primes.v1.RandomRequest
	(*RandomResponse)(nil), // 1: primes.v1.RandomResponse
	(*ListRequest)(nil),    // 2: primes.v1.ListRequest
	(*ListResponse)(nil),   // 3: primes.v1.ListResponse
}
var file_primes_v1_primes_proto_depIdxs = []int32{
	0, // 0: primes.v1.Primes.Random:input_type -> primes.v1.RandomRequest
	2, // 1: primes.v1.Primes.List:input_type -> primes.v1.ListRequest
	1, // 2: primes.v1.Primes.Random:output_type -> primes.v1.RandomResponse
	3, // 3: primes.v1.Primes.List:output_type -> primes.v1.ListResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_primes_v1_primes_proto_init() }
func file_primes_v1_primes_proto_init() {
	if File_primes_v1_primes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_primes_v1_primes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_primes_v1_primes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_primes_v1_primes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_primes_v1_primes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_primes_v1_primes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_primes_v1_primes_proto_goTypes,
		DependencyIndexes: file_primes_v1_primes_proto_depIdxs,
		MessageInfos:      file_primes_v1_primes_proto_msgTypes,
	}.Build()
	File_primes_v1_primes_proto = out.File
	file_primes_v1_primes_proto_rawDesc = nil
	file_primes_v1_primes_proto_goTypes = nil
	file_primes_v1_primes_proto_depIdxs = nil
}
